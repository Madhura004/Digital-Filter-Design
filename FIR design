module FIR_Filter (
    input clk,
    input reset,
    input signed [15:0] x_in,
    output reg signed [15:0] y_out
);
    parameter N = 4; // Number of taps

    reg signed [15:0] coeff [0:N-1] = '{16'd1, 16'd2, 16'd3, 16'd4}; // Filter coefficients
    reg signed [15:0] shift_reg [0:N-1]; // Shift register for input samples

    integer i;

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            for (i = 0; i < N; i = i + 1) begin
                shift_reg[i] <= 16'd0;
            end
            y_out <= 16'd0;
        end else begin
            // Shift the input samples
            for (i = N-1; i > 0; i = i - 1) begin
                shift_reg[i] <= shift_reg[i-1];
            end
            shift_reg[0] <= x_in;

            // Perform the FIR calculation
            y_out <= 16'd0;
            for (i = 0; i < N; i = i + 1) begin
                y_out <= y_out + (shift_reg[i] * coeff[i]);
            end
        end
    end
endmodule
